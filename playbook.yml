- hosts: localhost
  tasks:
    - name: 'Install latest packages'
      become: true
      ansible.builtin.package:
        name: '{{ item }}'
        state: latest
      loop:
        - apt-file
        - fzf
        - git
        - jq
        - make
        - trash-cli
        - python3
        - python3-pip

    - name: 'Register windows_home variable'
      ansible.builtin.shell: wslpath "$(powershell.exe -Command Write-Host '$Env:USERPROFILE')"
      check_mode: false
      changed_when: false
      register: windows_home
      when: ansible_env.WSL_DISTRO_NAME is defined
    - name: 'Print windows_home variable'
      ansible.builtin.debug:
        msg: '{{ windows_home.stdout }}'

    - name: 'go install'
      ansible.builtin.shell: |
        command=$(echo "{{ item }}" | sed 's#.*/\(.*\)@.*#\1#')
        if which $command >/dev/null; then
          exit
        fi

        go install {{ item }}
        echo DONE
      register: result
      changed_when: result.stdout | length > 0
      loop:
        - github.com/x-motemen/ghq@latest

    - name: 'Register GHQ_ROOT variable'
      ansible.builtin.command:
        argv: [ghq, root]
      register: GHQ_ROOT
      check_mode: false
      changed_when: false
      environment:
        PATH: "{{ (ansible_env.GOPATH | default(ansible_env.HOME + '/go')) + '/bin' }}:{{ ansible_env.PATH }}"

    - name: 'ghq get'
      ansible.builtin.command:
        argv: [ghq, get, '{{ item }}']
      loop:
        - https://github.com/Homebrew/brew.git
        - git@github.com:gidoichi/conffiles.git
        - git@github.com:gidoichi/dotfiles.git
        # - git@github.com:gidoichi/pmo.git
      environment:
        PATH: "{{ (ansible_env.GOPATH | default(ansible_env.HOME + '/go')) + '/bin' }}:{{ ansible_env.PATH }}"
      register: result
      changed_when: result.stderr is not search("exists")

    - name: 'Place dotfiles'
      block:
        - name: 'Place dotfiles: ln -s dotfiles'
          ansible.builtin.file:
            state: link
            src: '{{ GHQ_ROOT.stdout }}/github.com/gidoichi/dotfiles'
            path: '{{ ansible_env.HOME }}/.dotfiles'
        - name: 'Place dotfiles: run install.sh'
          ansible.builtin.command:
            argv: ['{{ ansible_env.HOME }}/.dotfiles/install.sh']
          register: result
          changed_when: result.stderr | length > 0

    - name: 'Put Links to Windows Directories in "HOME"'
      ansible.builtin.file:
        src: '{{ windows_home.stdout }}/{{ item }}'
        dest: '{{ ansible_env.HOME }}/{{ item }}'
        state: link
      loop:
        - 'Desktop'
        - 'Documents'
        - 'Downloads'
        - 'Music'
        - 'Pictures'
        - 'Videos'
      when: windows_home is defined

    - name: 'npm install'
      ansible.builtin.shell: |
        if npm ls -g --json | jq -e --arg e '{{ item }}' '.dependencies[$e]' >/dev/null; then
          return
        fi
        npm install -g '{{ item }}'
        echo DONE
      register: result
      changed_when: result.stdout | length > 0
      loop:
        - eslint
        - marked
        - prettier

    - name: 'brew install'
      ansible.builtin.command:
        argv: ['{{ GHQ_ROOT.stdout }}/github.com/Homebrew/brew/bin/brew', install, '{{ item }}']
      register: result
      changed_when: result.stderr is not search(" is already installed and up-to-date.")
      loop:
        - asdf
        # - deno
        - yq

    - name: 'Install cargo'
      # TODO PATH
      ansible.builtin.shell: |
        if which cargo >/dev/null; then
          exit
        fi

        curl https://sh.rustup.rs -sSf | sh -s -- -y
        echo DONE
      register: result
      changed_when: result.stdout | length > 0
    - name: 'Install community.general'
      ansible.builtin.shell: |
        if ansible-galaxy collection list --format=json | jq -e '.. | ."{{ item }}"? | select(. != null)' >/dev/null; then
          exit
        fi

        ansible-galaxy collection install "{{ item }}"
        echo DONE
      register: result
      changed_when: result.stdout | length > 0
      loop:
        - community.general
    - name: Install Rust packages
      community.general.cargo:
        name: git-credential-keepassxc

- hosts: localhost
  roles:
    - emacs
    - zsh
